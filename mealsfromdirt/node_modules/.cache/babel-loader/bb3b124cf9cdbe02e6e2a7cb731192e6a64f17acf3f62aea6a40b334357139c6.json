{"ast":null,"code":"var _jsxFileName = \"/home/student/wdeleon/cs470/final/mealsfromdirt/mealsfromdirt/src/components/Main.js\";\nimport { Fragment, useState } from 'react';\nimport Box from \"@mui/material/Box\";\nimport TopBar from './TopBanner';\nimport CropMenu from './CropMenu';\nimport MealMenu from './MealMenu';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  const [menuType] = 'crop';\n  const whichMenu = menuType => {\n    if (menuType === 'crop') {\n      return /*#__PURE__*/_jsxDEV(CropMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n    } else if (menuType === 'meal') {\n      return /*#__PURE__*/_jsxDEV(MealMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        menuType: menuType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), whichMenu(menuType)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Fragment","useState","Box","TopBar","CropMenu","MealMenu","Button","jsxDEV","_jsxDEV","Main","menuType","whichMenu","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","_c","$RefreshReg$"],"sources":["/home/student/wdeleon/cs470/final/mealsfromdirt/mealsfromdirt/src/components/Main.js"],"sourcesContent":["import {Fragment, useState} from 'react';\nimport Box from \"@mui/material/Box\";\nimport TopBar from './TopBanner';\nimport CropMenu from './CropMenu';\nimport MealMenu from './MealMenu';\nimport Button from '@mui/material/Button';\n\n\nfunction Main(){\n\n    const [menuType,] = 'crop';\n\n\n    const whichMenu = (menuType) => {\n        if(menuType === 'crop'){\n            return <CropMenu/>\n        }else if(menuType === 'meal'){\n            return <MealMenu/>\n        }\n    }\n\n    return(\n        <Fragment>\n            <Box>\n\n                <TopBar\n                    menuType={menuType}\n                />\n                \n                <Button variant=\"contained\">\n                    Filter\n                </Button>\n\n                \n                {whichMenu(menuType)}\n                \n                \n            </Box>\n\n        </Fragment>\n    )\n}\n\nexport default Main;"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,QAAQ,QAAO,OAAO;AACxC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,SAASC,IAAIA,CAAA,EAAE;EAEX,MAAM,CAACC,QAAQ,CAAE,GAAG,MAAM;EAG1B,MAAMC,SAAS,GAAID,QAAQ,IAAK;IAC5B,IAAGA,QAAQ,KAAK,MAAM,EAAC;MACnB,oBAAOF,OAAA,CAACJ,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IACtB,CAAC,MAAK,IAAGL,QAAQ,KAAK,MAAM,EAAC;MACzB,oBAAOF,OAAA,CAACH,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IACtB;EACJ,CAAC;EAED,oBACIP,OAAA,CAACR,QAAQ;IAAAgB,QAAA,eACLR,OAAA,CAACN,GAAG;MAAAc,QAAA,gBAEAR,OAAA,CAACL,MAAM;QACHO,QAAQ,EAAEA;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB,eAEFP,OAAA,CAACF,MAAM;QAACW,OAAO,EAAC,WAAW;QAAAD,QAAA,EAAC;MAE5B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAGRJ,SAAS,CAACD,QAAQ,CAAC;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGlB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEnB;AAACG,EAAA,GAjCQT,IAAI;AAmCb,eAAeA,IAAI;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}